name: Release Binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {}

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build cdylib
        run: cargo build --release --verbose

        # Collect built library into artifacts/
      - name: Collect artifact
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p artifacts
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            cp target/release/libratatui_ffi.so artifacts/
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            cp target/release/libratatui_ffi.dylib artifacts/
          else
            cp target/release/ratatui_ffi.dll artifacts/
          fi
          ls -la artifacts

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ratatui-ffi-${{ runner.os }}
          path: artifacts/*

  release:
    name: Attach to Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: ratatui-ffi-*
          merge-multiple: true

      - name: Show downloaded files
        run: ls -la

      - name: Upload assets to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.so
            *.dylib
            *.dll
